!function(){!function(){let e=document.querySelector(".team__list");e.addEventListener("click",function(t){if(t.preventDefault(),t.target.classList.contains("member__link")){let n=t.target,i=e.querySelector(".member.is-active");if(i&&(i.querySelector(".member__text").style.height="0px",i.classList.remove("is-active")),!i||i.querySelector(".member__link")!=n){let e=n.closest(".member");e.classList.add("is-active");let t=e.querySelector(".member__text");t.style.height=t.scrollHeight+"px"}}})}(),function(){let e=document.querySelectorAll(".menu__block"),t=document.querySelector("body");e.forEach(function(e){e.addEventListener("click",function(e){e.preventDefault();let n=this,i=document.querySelector(".menu__item.is-active");if(i&&(i.querySelector(".menu__desc").style.width="0px",i.classList.remove("is-active")),!i||i.querySelector(".menu__block")!=n){let e=n.closest(".menu__item");e.classList.add("is-active");let i=e.querySelector(".menu__desc");t.offsetWidth>480?i.style.width=function(){let e=document.documentElement.clientWidth,t=document.querySelectorAll(".menu__block"),n=e-parseFloat(getComputedStyle(t[0]).width)*t.length;return n>550?550:n}()+"px":i.style.width="auto"}})})}()}(),$(function(){let e=$(".candy-bar__slider");$(".scroll-btn").on("click",function(t){t.preventDefault();let n,i,o=$(this),l=e.find(".candy-bar__item"),c=l.filter(".active");o.hasClass("scroll-btn--forward")&&(n=c.next(),i=l.first()),o.hasClass("scroll-btn--back")&&(n=c.prev(),i=l.last()),function(t){let n=e.find(".candy-bar__item"),i=n.filter(".active"),o=n.eq(t),l=o.index(),c=e.find(".candy-bar__list");o.length&&c.animate({left:100*-l+"%"},500,function(){i.removeClass("active"),o.addClass("active")})}(n.length?n.index():i.index())})}),ymaps.ready(init);var geoObjects=[],marks=[{latitude:55.7587,longitude:37.5828,hintContent:'<div class="map__hint">Кудринская площадь д.1</div>'},{latitude:55.7427,longitude:37.5799,hintContent:'<div class="map__hint">ул.Плющиха д.11</div>'},{latitude:55.7574,longitude:37.6208,hintContent:'<div class="map__hint">Площадь Революции д.1</div>'},{latitude:55.75,longitude:37.6037,hintContent:'<div class="map__hint">Большой Знаменский пер. д.23</div>'}];function init(){var e=new ymaps.Map("map",{center:[55.75269656,37.59427083],zoom:14,controls:["zoomControl"],behaviors:["drag"]});for(let e=0;e<marks.length;e++)geoObjects[e]=new ymaps.Placemark([marks[e].latitude,marks[e].longitude],{hintContent:marks[e].hintContent},{iconLayout:"default#image",iconImageHref:"../img/marker.png",iconImageSize:[46,57],iconImageOffset:[-23,-57]});var t=new ymaps.Clusterer({clusterIcons:[{href:"../img/marker.png",size:[46,57],offset:[-23,-57]}],clusterIconContentLayout:null});e.geoObjects.add(t),t.add(geoObjects)}const menu=function(){let e=document.querySelector(".menu-btn"),t=document.querySelector(".header"),n=document.querySelector("body"),i=document.querySelector(".nav__list"),o=!1;function l(){e.classList.toggle("is-active"),t.classList.toggle("is-active"),n.classList.toggle("locked"),o=!o}return document.addEventListener("keydown",function(e){27==e.keyCode&&o&&l()}),{menuOver:function(){e.addEventListener("click",l),i.addEventListener("click",function(e){e.target.classList.contains("nav__link")&&n.offsetWidth<=768&&l()})}}}();menu.menuOver();let OnePageScroll=function(){const e=document,t=e.querySelector(".wrapper"),n=e.querySelector("#content"),i=e.querySelectorAll(".section");let o,l=e.querySelectorAll(".nav__link"),c=e.querySelectorAll(".listing__item"),a=!1;function s(t){if(!a){a=!0;let i=-100*t+"%";n.style.top=i,e.querySelector(".listing__item.is-active").classList.remove("is-active"),c[t].classList.add("is-active"),setTimeout(function(){a=!1},900)}}function r(e){let t=n.style.top?-parseInt(n.style.top,10)/100:0;"up"==e&&t>0&&s(t-1),"down"==e&&t<i.length-1&&s(t+1)}t.addEventListener("wheel",function(e){r(e.deltaY<0?"up":"down")}),t.addEventListener("touchmove",function(e){e.preventDefault()}),t.addEventListener("touchstart",function(e){/Android|AppleWebKit|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)&&(o=e.touches[0].clientY)},!1),t.addEventListener("touchend",function(e){let t=e.changedTouches[0].clientY-o;if(Math.abs(t)>50){r(t>0?"up":"down")}},!1),l.forEach(function(e){e.addEventListener("click",function(e){e.preventDefault(),s(this.dataset.index)})}),c.forEach(function(e){e.addEventListener("click",function(e){e.preventDefault(),link=e.target,s(link.dataset.index)})}),e.querySelector(".intro-button").addEventListener("click",function(e){e.preventDefault(),s(7)}),e.addEventListener("keyup",function(e){let t;38==e.keyCode&&(t="up"),40==e.keyCode&&(t="down"),r(t)})};OnePageScroll();const overlay=function(){let e=document.querySelector("body"),t=document.querySelector(".modal"),n=document.querySelector(".modal__inner"),i=document.createElement("div");i.classList.add("modal__text");let o=function(){t.classList.remove("is-active"),e.classList.remove("locked")};return{open:function(l,c){let a=document.createElement("button");i.textContent=l,n.innerHTML="",c?(a.classList.add("order-button"),a.textContent="Закрыть"):a.classList.add("modal__close"),n.appendChild(i),n.appendChild(a),t.classList.add("is-active"),e.classList.add("locked"),a.addEventListener("click",e=>{e.preventDefault(),o()}),t.addEventListener("click",e=>{e.target===t&&o()}),document.addEventListener("keydown",e=>{27===e.keyCode&&o()})},close:o}}(),ajaxForm=function(e){let t=new FormData;t.append("name",e.elements.name.value),t.append("phone",e.elements.phone.value),t.append("comment",e.elements.textarea.value),t.append("to","client@mail.ru");const n=new XMLHttpRequest;return n.responseType="json",n.open("POST","https://webdev-api.loftschool.com/sendmail"),n.setRequestHeader("X-Requested-With","XMLHttpRequest"),n.send(t),n},submitForm=function(){let e=document.querySelector("#order-form");if(validateForm(e)){let t=ajaxForm(e);t.addEventListener("load",()=>{let e=!1;if(t.status>=400){let n="Ошибка соединения с сервером, попробуйте позже";overlay.open(`${n}. Ошибка ${t.status}`,e)}else 0==t.response.status?(content=t.response.message,overlay.open(content,e)):(content="Сообщение отправлено",e=!0,overlay.open(content,e))})}};function validateForm(e){let t=!0;return validateField(e.elements.name)||(t=!1),validateField(e.elements.phone)||(t=!1),validateField(e.elements.textarea)||(t=!1),t}function validateField(e){return e.nextElementSibling.textContent=e.validationMessage,e.checkValidity()}let orderBtn=document.querySelector("#send");orderBtn.addEventListener("click",e=>{e.preventDefault(),submitForm()}),function(){const e=document.querySelectorAll(".reviews__item"),t=document.querySelectorAll(".reviews__pix-item");let n=0;for(let i=0;i<e.length;i++)t[i].addEventListener("click",function(o){o.preventDefault(),e[i].classList.toggle("is-active"),t[i].classList.toggle("is-active"),t[n].classList.toggle("is-active"),e[n].classList.toggle("is-active"),n=i})}(),document.addEventListener("DOMContentLoaded",function(){!function(){let e=document.querySelector(".video__content"),t=document.querySelector(".video__btn"),n=document.querySelector(".video__range--volume"),i=document.querySelector(".video__range--progress"),o=document.querySelector(".video__play"),l=!1;function c(){e.play(),l=!0,t.classList.add("hidden"),o.classList.add("stop")}function a(){e.pause(),l=!1,t.classList.remove("hidden"),o.classList.remove("stop")}e.ontimeupdate=function(){!function(){let t=e.duration,n=e.currentTime;i.value=n/t*100}(),e.currentTime==e.duration&&a()},t.addEventListener("click",function(){l||c()}),e.addEventListener("click",function(){l&&a()}),n.addEventListener("input",function(){let t=this.value;e.volume=t/100}),i.addEventListener("click",function(t){let n=i.offsetWidth,o=t.offsetX;i.value=o/n*100,e.pause(),e.currentTime=e.duration*(o/n),e.play()}),o.addEventListener("click",function(){l?l&&(a(),e.currentTime=0):c()})}()},!1);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
